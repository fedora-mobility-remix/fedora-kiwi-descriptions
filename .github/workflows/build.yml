on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
      - uses: actions/checkout@v4

      - name: Install kiwi
        run: |
          export DEBIAN_FRONTEND=noninteractive
          curl https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/xUbuntu_24.04/Release.key \
            | sudo gpg --dearmor -o /etc/apt/keyrings/kiwi.gpg
          echo 'deb [signed-by=/etc/apt/keyrings/kiwi.gpg] https://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/xUbuntu_24.04/ ./' \
            | sudo tee /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get install -y python3-kiwi dnf
          kiwi --version

      # Should be able to remove this when runns support Ubuntu 25.04+,
      # as the distribution-gpg-keys package is available there.
      - name: Setup Fedora keys
        run: |
          git clone --depth 1 https://github.com/rpm-software-management/distribution-gpg-keys
          sudo mkdir /usr/share/distribution-gpg-keys/
          sudo cp -R distribution-gpg-keys/keys/fedora /usr/share/distribution-gpg-keys/

      - name: Build image
        run: |
          sudo ./kiwi-build \
            --kiwi-file=Fedora-Mobility.kiwi \
            --image-type=oem \
            --image-profile=SDM845-Disk \
            --output-dir ./outdir

      - name: Post-process image artifacts
        run: |
          set -uexo pipefail

          mkdir artifacts/

          sudo kpartx -vafs ./outdir-build/Fedora-Mobility.aarch64-Rawhide.raw
          sudo dd if=/dev/mapper/loop0p1 of=efipart.vfat bs=1M
          sudo dd if=/dev/mapper/loop0p2 of=artifacts/boot.raw bs=1M
          sudo dd if=/dev/mapper/loop0p3 of=artifacts/root.raw bs=1M

          # The ESP that kiwi generated for us has the wrong sector size,
          # so we recreate it.
          VOLID=$(file efipart.vfat | grep -Eo "serial number 0x.{8}" | cut -d\  -f3)

          truncate -s 268435456 artifacts/esp.raw
          mkfs.vfat -F 32 -S 4096 -n EFI -i $VOLID artifacts/esp.raw

          mkdir -p esp.old esp.new
          sudo mount -o loop efipart.vfat esp.old
          sudo mount -o loop artifacts/esp.raw esp.new

          sudo cp -a esp.old/. esp.new/
          sudo umount esp.old/ esp.new/

          # Push firmware blobs into the rootfs.
          git clone https://gitlab.com/sdm845-mainline/firmware-oneplus-sdm845

          mkdir rootfs
          sudo mount -o loop,subvol=root artifacts/root.raw rootfs

          sudo cp --update -a firmware-oneplus-sdm845/usr rootfs/
          sudo cp --update -a firmware-oneplus-sdm845/lib rootfs/usr

          # Hide ipa-fws.mbn. Somehow loading this firmware drops the phone into Crashdump mode
          sudo mv rootfs/usr/lib/firmware/qcom/sdm845/oneplus6/ipa_fws.mbn{,.disabled}

          # Some blobs from firmware-oneplus-sdm845 need to be preferred over
          # the stuff that comes from linux-firmware
          sudo mv rootfs/usr/lib/firmware/{postmarketos,updates}

          sudo umount rootfs

      - name: Upload image build log
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: image-root.log
          path: ./outdir-build/build/image-root.log

      - name: Upload build artifacts
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: Fedora-Mobility.aarch64-Rawhide.raw
          path: artifacts/

      - name: Prepare release artifact
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          tar -Jcvf Fedora-SDM845-Remix.tar.xz artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            Fedora-SDM845-Remix.tar.xz
